---
bibliography: ../bib/refs.bib
csl: ../bib/biological-reviews.csl
format:
  docx:
    reference-doc: ../bib/template.docx
    output-file: "results.docx"
editor_options: 
  chunk_output_type: console
execute:
  freeze: auto  # re-render only when source changes
  cache: false
  echo: false
  warning: false
  error: false
  include: true
crossref:
  fig-title: '**Figure**'
  fig-labels: arabic
  title-delim: "-"
  fig-prefix: "Figure"
  tbl-prefix: ""
editor: 
  markdown: 
    wrap: 72
---

```{r, loadpacks}
#| label: loadpacks
#| echo: false
#| warning: false
#| error: false

# Clean working directory
  rm(list = ls())

## Loading some important packages. For first time use, unannotated and install the two packages first
	source(here::here("R", "func.R"))
  check_and_install(c("pacman"))
	pacman::p_load(tidyverse, flextable, latex2exp, metafor, orchaRd, readxl, ape, phytools,here, brms, ggrepel, patchwork, magick, ggtree, equatags, rotl, rphylopic, ggimage, rmarkdown, knitr, kableExtra, janitor, minqa, multcomp)

# Load the processed data. Keep object as list to hopefully make code more readable. 
         path <- here("output", "data")
        files <- list.files(here("output", "data"))
	 data_lists <- lapply(paste0(path, "/", files), function(x) read.csv(x))
    names(data_lists) <- files

    data_lists  <- lapply(data_lists, function(x) mutate(x, depend = interaction(sample_depend, study)))

# All data summary
  data <- plyr::ldply(data_lists)

# Bring in the phylogeny 
  phylo <- read.tree(here("output", "phylo", "phylo_pruned_species.nwk"))

# Tree also contains species that are in temperature dataset so these need to be pruned
  phylo <- tree_checks(tree = phylo, dataCol = "species_phylo", data = data, type = "prune")

# Set digits
  options(digits = 2)
```

# Methods
### *Effect size*

To quantify the impacts of developmental stress on mitochondrial function we calculated the standardized mean difference, assuming heteroscedastic population variances ($SMD_{H}$) [@Bonett2008; @Bonett2009] along with its associated sampling error. We used the *escalc* function of the *metafor* package (vers. `r utils::packageVersion("metafor")`) [@Viechtbauer2010-fn] in R (vers. `r paste0(R.Version()$major, ".", R.Version()$minor)`) which implements a correction to account for possible bias resulting from effect sizes calculated with small sample sizes [@Borenstein2009]. We choose to use $SMD_{H}$ as our effect size because our data: 1) contained substantial amounts of ratio data (e.g., respiratory control ratios, RCR, relative gene expression) which makes interpretation with alternative effect size measures, such as log response ratio, challenging; 2) percentages and zero measurement variables and 3) skewed measurement variables. $SMD_{H}$ is more robust to these types of measurement variables.  

Given the diversity of measurement variables we paid particular attention to effect size direction to ensure that positive increase of means all represent increased in mitochondrial function. ONDI ELABORATES AND TABLE

We calculated $SMD_{H}$ as the mean difference between control and treatment groups divided by the pooled standard deviation. As such, positive effect sizes represent situations where the mean of the experimental group was larger than the control group. Again, we corrected the direction of effect size (multiplied by -1) to ensure their interpretation remained consistent with respect to mitochondrial function.

### *Meta-Analysis*

We analysed our data using multilevel meta-analytic (MLMA) and meta-regression (MLMR) models in R  using *metafor* [vers. `r utils::packageVersion("metafor")` @Viechtbauer2010-fn]. Meta-analytic mean estimates and meta-regression models were plotted using orchard plots which convey overall meta-analytic means, alongside raw effect sizes and prediction intervals, which describe effect heterogeneity [vers. 2.0, @Nakagawa2021-ls; @nakagawaorchard]. 

#### *Multi-level Meta-analysis (MLMA) Models*

Using data subsets for each of our major stressor categories, we first fit multi-level meta-analysis (MLMA) models (i.e., intercept-only models) with $SMD_{H}$, that included study, tissue type, and phylogeny as random effects to account for non-independence and identify sources of variability. We also explored models that included species and sample dependency as random effects but these were highly confounded with phylogeny and study so we simplified models by removing these terms. Given *metafor* does not estimate a residual variance by default we also included an observation-level random effect in our models. The size of datasets varied in the number of species and tissues (@tbl-heterogeneity). As such, we simplified the random effect structure for some datasets; including only random effects with six or more levels. Our MLMA models allowed us to partition variation in $SMD_{H}$ among these key sources while accounting for total sampling variance. We took a pluralistic approach to heterogeneity reporting, by reporting absolute ($\sigma^2$), relative (i.e., $I_{total}^2$, *sensu* @Nakagawa2012-oc; @Noble2022-ty) and magnitude measures (both $CV_{total}$ and $M_{total}$) of heterogeneity  as suggested by @Yang2023. We also report each of their stratified versions for each random effect level [@Nakagawa2012-oc; @Yang2023]. We also present 95% prediction intervals which describe the expected distribution of effects from future studies [@Nakagawa2021-ls; @Noble2022-ty].

A phylogeny was derived by first cross-checking taxa names using the Open Tree of Life (OTL) with the *rotl* package in R (vers. `r utils::packageVersion("rotl")`) [@Michonneau2016-if], and plotting taxa using *ggtree* to visualize the tree (vers. `r utils::packageVersion("ggtree")`) [@Yu2017-wj]. We resolved any taxa names that were outdated or changed. Once names in the dataset and *rotl* database matched we exported species names and built a time calibrated phylogeny for the species in our dataset using TimeTree [timetree.org;  @kumar2022timetree]. We used the R packages *ape* (vers. `r utils::packageVersion("ape")`) [@Paradis2019-gx] and *phytools* (vers. `r utils::packageVersion("phytools")`) [@Revell2012-vq] to prune the tree for individual analyses and calculate phylogenetic correlation matrices used in meta-analytic models.

#### *Multi-level Meta-Regression (MLMR) Models*

After quantifying levels of heterogeneity in each of the different stressor datasets, we fit a series of multi-level meta-regression (MLMR) models to test our key questions. In all models, we included the same random effects as we used in our MLMA models, however, MLMR models differed in the moderators included because each stressor type had unique sources of heterogeneity that we expected would explain effect variance. Despite this, a number of moderators were relevant to all stressor manipulation types and were included in all models. These included: 1) measurement trait category (i.e., antioxidants, oxidative damage etc.), 2) stage of manipulation (pre-natal/post-natal or both) and 3) taxa (i.e., class: mammals, birds, amphibians, fish). Some stressor categories were made up of a single class (e.g., social deprivation was only done in mammals) and so we did not include the taxa moderator in these models. We fit models assuming heteroscedastic variation among levels of a given moderators to capture differences in effect variation. 

We had a substantially larger dataset of studies measuring nutritional stress. These studies were more variable and so we included some additional moderators to capture variation in effects. These included: 1) whether the nutritional manipulation involved over or under nutrition and 2) the type of nutritional manipulation done (e.g., high fat, low protein, etc.). We expected that the different measurement categories would exhibit different responses to nutritional stress and so we also included an interaction between measurement category and nutritional manipulation type. Data exploration showed gaps across taxa in the types of nutritional manipulations done, with mammals showing clear differences in the type of manipulation. As such, we subset mammals out and refit these models in this group only. 

# Results

```{r, mlma_models}
#| label: mlma_models
#| echo: false
#| warning: false
#| error: false

#### -------------------------------------------------- ####
# 1.            Multi-level Meta-analysis            
#### -------------------------------------------------- ####
  
  rerun = FALSE
  if(rerun){
    
    # Create list to store models
    MLMA_list <- list()
    
    for(i in 1:length(data_lists)){
      # Add observation level random effect
        data_lists[[i]]$obs <- 1:nrow(data_lists[[i]])

      # Prune the tree to relevant taxa contained within this dataset.
        tree_prune <- tree_checks(tree = phylo, dataCol = "species_phylo", data = data_lists[[i]], type ="prune")

      # Calculate the phylogenetic correlation matrix
        phylo_cor <- vcv(tree_prune, cor = TRUE)

      # Fit the MLMA model for each dataset. Vary random effects structure based on levels of the random effects in the dataset
     
      if(i == 2){
          MLMA_list[[i]] <- rma.mv(SMDH ~ 1, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1| obs),
                          test = "t",  
                          data = data_lists[[i]])
      } else {
          MLMA_list[[i]] <- rma.mv(SMDH ~ 1, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1| species_phylo,
                                          ~1| tissue_sum,
                                          ~1| obs),
                            R = list(species_phylo = phylo_cor),
                          test = "t", 
                          data = data_lists[[i]])
      }
      
      # Add names to make sure we keep track of which dataset is which model                      
        names(MLMA_list)[i] <- names(data_lists)[i]
    }
      
    # Save the model
        saveRDS(MLMA_list, file = here("output", "models", "MLMA_list.rds"))

  } else {
        MLMA_list <- readRDS(here("output", "models", "MLMA_list.rds"))
  }

# summary
  summary_list <- lapply(MLMA_list, function(x) summary(x, digits = 3))

# RVE to check robustness of results
  robust_list <- lapply(MLMA_list, function(x) robust(x, cluster = x$data[,"study"]))
```

```{r, tbl-heterogeneity}
#| label: tbl-heterogeneity
#| tbl-cap: "Relative heterogeneity estimates ($I^2$), sample sizes ($n_{effects}$), number of studies ($n_{study}$) and number of species ($n_{species}$) for each of the developmental stressor categories. Relative heterogeneity is reported as $I^2$ (in percent) based on the intercept-only multi-level meta-analytic model. Total heterogeneity, along with stratified version of $I^2$ (study, phylogeny, tissue type and observation) are also provided. Note we also present other heterogeneity measures in the supplementary material."
#| echo: false
#| warning: false
#| error: false

#### -------------------------------------------------- ####
# 2.            Heterogeneity and Prediction Intervals
#### -------------------------------------------------- ####

  # Create k and n columns for sample sizes
    order <- c(1, 3, 4, 2)
  size  <- data.frame(do.call("rbind", lapply(data_lists, function (x) x  %>% summarise(k = n(), species = n_distinct(species_phylo), study = n_distinct(study)))))  %>% slice(order)
  
  # Create table of I2 Total and I2 for each level
  i2 <- make_het_tables(MLMA_list, size = size, type = "i2")

i2$Stressor <- c("Corticosterone",  "Disturbance", "Nutrition", "Social Deprevation")
i2  <- i2  %>% dplyr::select(Stressor, everything())

eq  <- c(
  "Stressor",
  "n_{effects}",
  "n_{species}",
  "n_{study}",
  "I^2_{total} (\\%)",
  "I^2_{study} (\\%)",
  "I^2_{phylogeny} (\\%)",
  "I^2_{tissue} (\\%)",
  "I^2_{obs} (\\%)"
)

flextable(round_df(i2, digits = 3))  %>% compose(part = "header", value = as_paragraph(as_equation(eq))) %>% 
  width(j = c(1:9), width = c(1.5, rep(0.65, 8)))  %>%  compose(j = c(7,8), i = 4, value = as_paragraph("–"))
```

```{r, fig-phylo}
#| label: fig-phylo
#| echo: false
#| warning: false
#| error: false
#| fig-cap: "**Phylogeny of species included in the meta-analysis**. Phylogenetic relationships and divergence times are based on TimeTree [timetree.org; @kumar2022timetree]. The phylogeny was pruned to only include species in the dataset."
  
  phylo$tip.label <- gsub("_", " ", phylo$tip.label)

  fig_phylo <- ggtree(phylo, layout = "rectangular", branch.length = "none") + 
    geom_tiplab(size = 4, offset = 7, hjust = 1, align = FALSE, fontface = "italic") + 
    theme_tree2() + labs(x = "Millions of Years (MY)") +
    theme(legend.position = "none") 

    ggsave(filename = here("output", "figures", "phylo.png"), fig_phylo, width = 4.298039, height = 5.992157)

  p_phylo_img <- image_read(here("output", "figures", "phylo.png"))
  p_phylo_img

```

```{r, measure_category}
#| label: measure_category
#| echo: false
#| warning: false
#| error: false

#### -------------------------------------------------- ####
# 1.1           Measurement category
#### -------------------------------------------------- ####
  
  rerun = FALSE
  if(rerun){
    
    # Create list to store models
    MLMR_list_Measure <- list()
    MLMR_list_Measure_noint <- list()
    
    for(i in 1:length(data_lists)){
      # Add observation level random effect
        data_lists[[i]]$obs <- 1:nrow(data_lists[[i]])

      # Prune the tree to relevant taxa contained within this dataset.
        tree_prune <- tree_checks(tree = phylo, dataCol = "species_phylo", data = data_lists[[i]], type ="prune")

      # Calculate the phylogenetic correlation matrix
        phylo_cor <- vcv(tree_prune, cor = TRUE)

      # # Fit the MLMR model for each dataset comparing pre vs postnatal 
     
      if(i == 2){
          MLMR_list_Measure[[i]] <- rma.mv(SMDH ~ measurement_category, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1 + measurement_category| obs),
                          test = "t",  rho = 0, struc = "HCS", 
                          data = data_lists[[i]])
      } else {
          MLMR_list_Measure[[i]] <- rma.mv(SMDH ~ measurement_category, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1| species_phylo,
                                          ~1| tissue_sum,
                                          ~1 + measurement_category| obs),
                                          rho = 0, struc = "HCS", 
                            R = list(species_phylo = phylo_cor),
                          test = "t", 
                          data = data_lists[[i]])
      }
      
      if(i == 2){
          MLMR_list_Measure_noint[[i]] <- rma.mv(SMDH ~ measurement_category-1, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1 + measurement_category| obs),
                          test = "t",  rho = 0, struc = "HCS", 
                          data = data_lists[[i]])
      } else {
          MLMR_list_Measure_noint[[i]] <- rma.mv(SMDH ~ measurement_category-1, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1| species_phylo,
                                          ~1| tissue_sum,
                                          ~1 + measurement_category| obs),
                                          rho = 0, struc = "HCS", 
                            R = list(species_phylo = phylo_cor),
                          test = "t", 
                          data = data_lists[[i]])
      }
      

      # Add names to make sure we keep track of which dataset is which model                      
        names(MLMR_list_Measure)[i] <- names(data_lists)[i]
        names(MLMR_list_Measure_noint)[i] <- names(data_lists)[i]
    }
      
    # Save the model
        saveRDS(MLMR_list_Measure, file = here("output", "models", "MLMR_list_Measure.rds"))
        saveRDS(MLMR_list_Measure_noint, file = here("output", "models", "MLMR_list_Measure_noint.rds"))

  } else {
        MLMR_list_Measure <- readRDS(here("output", "models", "MLMR_list_Measure.rds"))
        MLMR_list_Measure_noint <- readRDS(here("output", "models", "MLMR_list_Measure_noint.rds"))
  }

```

```{r, preprost}
#| label: preprost
#| echo: false
#| warning: false
#| error: false


# Check relative duration differences across pre and postnatal for each dataset
  rel_dur_table <- lapply(data_lists, function(x) x  %>% group_by(class) %>% 
                          summarise(mean = mean(relative_total_duration, na.rm = TRUE), 
                                      sd = sd(relative_total_duration, na.rm = TRUE), 
                                       k = n(), 
                                    stdy = n_distinct(study), 
                                     spp = n_distinct(species_phylo)))

# Releative total duration is at the level of species and there are too few species to fit this variable as a moderator so sticking with just pre/post.

#### -------------------------------------------------- ####
# 1.3   Stage of stressor
#### -------------------------------------------------- ####

  rerun = FALSE
  if(rerun){
    
    # Create list to store models
    MLMR_list_preprost <- list()
    MLMR_list_preprost_noint <- list()
    
    for(i in 1:length(data_lists)){
      # Add observation level random effect
        data_lists[[i]]$obs <- 1:nrow(data_lists[[i]])
      
      # Prune the tree to relevant taxa contained within this dataset.
        tree_prune <- tree_checks(tree = phylo, dataCol = "species_phylo", data = data_lists[[i]], type ="prune")

      # Calculate the phylogenetic correlation matrix
        phylo_cor <- vcv(tree_prune, cor = TRUE)

      # # Fit the MLMR model for each dataset comparing pre vs postnatal and accounting for relative duration of stressor standardised to develeopment time. Note that social deprivation only has one level for stage so cannot fit this model
     
      if(i == 2){
          MLMR_list_preprost[[i]] <- rma.mv(SMDH ~ 1, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1| obs),
                          test = "t",  
                          data = data_lists[[i]])
      } else {
          MLMR_list_preprost[[i]] <- rma.mv(SMDH ~ stage, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1| species_phylo,
                                          ~1| tissue_sum,
                                          ~1 + stage | obs),
                                          rho = 0, struc = "HCS", 
                            R = list(species_phylo = phylo_cor),
                          test = "t", 
                          data = data_lists[[i]])
      }


      if(i == 2){
          MLMR_list_preprost_noint[[i]] <- rma.mv(SMDH ~ 1, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1| obs),
                          test = "t",  
                          data = data_lists[[i]])
      } else {
          MLMR_list_preprost_noint[[i]] <- rma.mv(SMDH ~ stage-1, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1| species_phylo,
                                          ~1| tissue_sum,
                                          ~1 + stage | obs),
                                          rho = 0, struc = "HCS", 
                            R = list(species_phylo = phylo_cor),
                          test = "t", 
                          data = data_lists[[i]])
      }


      # Add names to make sure we keep track of which dataset is which model                      
        names(MLMR_list_preprost)[i] <- names(data_lists)[i]
        names(MLMR_list_preprost_noint)[i] <- names(data_lists)[i]

    }
      
    # Save the model
        saveRDS(MLMR_list_preprost, file = here("output", "models", "MLMR_list_preprost.rds"))
        saveRDS(MLMR_list_preprost_noint, file = here("output", "models", "MLMR_list_preprost_noint.rds"))


  } else {
        MLMR_list_preprost <- readRDS(here("output", "models", "MLMR_list_preprost.rds"))
        MLMR_list_preprost_noint <- readRDS(here("output", "models", "MLMR_list_preprost_noint.rds"))
  }

 
```

```{r, taxa}
#| label: taxa
#| echo: false
#| warning: false
#| error: false

#### -------------------------------------------------- ####
# 1.3   Taxa 
#### -------------------------------------------------- ####

rerun = FALSE
  if(rerun){
    
    # Create list to store models
    MLMR_list_taxa <- list()
    MLMR_list_taxa_noint <- list()
    
    for(i in 1:length(data_lists)){
      # Add observation level random effect
        data_lists[[i]]$obs <- 1:nrow(data_lists[[i]])

      # Prune the tree to relevant taxa contained within this dataset.
        tree_prune <- tree_checks(tree = phylo, dataCol = "species_phylo", data = data_lists[[i]], type ="prune")

      # Calculate the phylogenetic correlation matrix
        phylo_cor <- vcv(tree_prune, cor = TRUE)

      # # Fit the MLMR model for each dataset but note that social deprivation only has one level for class so cannot fit this model
     
      if(i %in% c(1,3,4)){
          MLMR_list_taxa[[i]] <- rma.mv(SMDH ~ class, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1| species_phylo,
                                          ~1| tissue_sum,
                                          ~1 + class| obs),
                            R = list(species_phylo = phylo_cor),
                          test = "t", rho = 0, struc = "HCS", 
                          data = data_lists[[i]], control = list(maxiter = 1000, 
                                                                  tol = 1e-6))
        # Add names to make sure we keep track of which dataset is which model                      
        names(MLMR_list_taxa)[i] <- names(data_lists)[i]
      }

      if(i %in% c(1,3,4)){
          MLMR_list_taxa_noint[[i]] <- rma.mv(SMDH ~ class-1, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1| species_phylo,
                                          ~1| tissue_sum,
                                          ~1 + class| obs),
                            R = list(species_phylo = phylo_cor),
                          test = "t", rho = 0, struc = "HCS", 
                          data = data_lists[[i]], control = list(maxiter = 1000, 
                                                                  tol = 1e-6))
        # Add names to make sure we keep track of which dataset is which model                      
        names(MLMR_list_taxa_noint)[i] <- names(data_lists)[i]
      }
  
    }
      
    # Save the model
        saveRDS(MLMR_list_taxa, file = here("output", "models", "MLMR_list_taxa.rds"))
        saveRDS(MLMR_list_taxa_noint, file = here("output", "models", "MLMR_list_taxa_noint.rds"))

  } else {
        MLMR_list_taxa <- readRDS(here("output", "models", "MLMR_list_taxa.rds"))
        MLMR_list_taxa_noint <- readRDS(here("output", "models", "MLMR_list_taxa_noint.rds"))
  }

 # Summary of taxa 
  taxa_table <- data  %>% group_by(class) %>% 
    summarise(k = n(), 
              n_species = n_distinct(species_phylo2), 
              n_study = n_distinct(study))  %>% 
    arrange(desc(k))

  # Species of mammals
  mammals_sp <- data %>% filter(class == "Mammalia") %>% reframe(sp = unique(species_phylo2))
```

In total, we collected  `r sum(i2$k)` effect sizes from `r length(unique(data$species_phylo))` species (@fig-phylo) and `r length(unique(data$study))` studies across the different stressors (Table @tbl-heterogeneity). There were clear taxonomic biases. The majority of effects came from studies on mammals (effects = `r taxa_table[1,2]`, studies = `r taxa_table[1,4]`), and these were only from `r taxa_table[1,3]` species (*Mus musculus*, *Rattus norvegicus*, *Ovis aries* and *Capra hircus*). Fish had the second most effects (`r taxa_table[2,2]`, species = `r taxa_table[2,3]` and studies = `r taxa_table[2,4]`) followed by birds (`r taxa_table[3,2]`, species = `r taxa_table[3,3]` and studies = `r taxa_table[3,4]`) and amphibians (`r taxa_table[4,2]`, species = `r taxa_table[4,3]` from only `r taxa_table[4,4]` study). 

```{r, fig-orchard_int}
#| label: fig-orchard_int
#| echo: false
#| warning: false
#| error: false
#| fig-cap: "**Overall meta-analytic mean estimates for each developmental stressor category (a) corticosterone, (b) social deprevation, (c) disturbance stress and (d) nutritional stress**. Mean estimates are shown as large points, with 95% confidence (thick black bars) and prediction (thin black bars). The number of effects (k) along with the number of studies (in parantheses) are provided for each stressor category. The dashed line represents no effect (i.e., $SMD_{H}$ = 0). Raw data are also shown and are weighted by their inverse sampling error (precision)."
  
  table <- lapply(data_lists, function(x) x  %>% summarise(studies = n_distinct(study), spp = n_distinct(species_phylo), k = n()))

# Create coordinate system that is unique for each plot
z = list(data.frame(x = 1.2, y = 5),
         data.frame(x = 1.2, y = 5),
         data.frame(x = 1.2, y = 5),
         data.frame(x = 1.2, y = 5))

    plots  <- mapply(function(x, y, z) orchard_plot(x, xlab = TeX("$SMD_{H}$"), group = "study", trunk.size = 1.2, branch.size = 2, k = FALSE, g = FALSE) +  
                                                ylim(-10,10) + scale_x_discrete(labels = "Overall") +
                                                theme_classic() + theme(legend.position = "top",
                                                                        axis.title = element_text(size = 18),
                                                                        plot.title = element_text(face = "bold", size = 16),
                                                                        axis.text = element_text(size = 12),
                                                                        plot.tag = element_text(size = 24)) + scale_color_manual(values = "black") + scale_fill_manual(values = "gray") +
    annotate("text", x = c(z$x), y = c(z$y), label = TeX(paste0("\\textit{k} = ", y$k, " (", y$studies, ")")), size = 5, hjust = 0), x = MLMA_list, y = table, z = z, SIMPLIFY = FALSE)


    p_overall <- (plots[[1]] + ggtitle("Corticosterone") + plots[[2]] + ggtitle("Social Deprivation")) / (plots[[3]] + ggtitle("Disturbance") + plots[[4]] + ggtitle("Nutrition")) + plot_annotation(tag_levels = "a", tag_suffix = ")") 
    ggsave(here("output", "figures", "fig1.png"), p_overall, width = 10.2, height = 7)

    p_overall <- image_read(here("output", "figures", "fig1.png"))
    p_overall
```

## Corticosterone developmental impacts on mitochondrial function

Overall, exposure to corticosterone during development negatively impacted mitochondrial function ($SMD_{H}$ = `r coef(summary_list[[1]])$estimate`, 95% CI = `r coef(summary_list[[1]])$ci.lb` to `r coef(summary_list[[1]])$ci.ub`, $p$ = `r coef(summary_list[[1]])$pval`; [@fig-orchard_int]a). Effect heterogeneity was high (95% Prediction Intervals: `r predict(summary_list[[1]])$pi.lb` to `r predict(summary_list[[1]])$pi.ub`; Table @tbl-heterogeneity and see Table S @tbl-heterogeneity_cv & Table S @tbl-heterogeneity_m2), with `r i2[1,"I2_study"]`% of variation being driven by differences among studies ($I^2_{study}$; Table @tbl-heterogeneity) and `r i2[1,"I2_tissue_sum"]`% of variation being driven by differences among tissues ($I^2_{tissue}$; Table @tbl-heterogeneity) with little to no variation explained by phylogeny (Table @tbl-heterogeneity). 

Prenatal exposure to corticosterone had a larger negative impact on mitochondrial function than postnatal exposure ($SMD_{H}$ = `r MLMR_list_preprost[[1]]$b[2]`, 95% CI = `r MLMR_list_preprost[[1]]$ci.lb[2]` to `r MLMR_list_preprost[[1]]$ci.ub[2]`), however, this effect was not significant ($p$ = `r MLMR_list_preprost[[1]]$pval[2]`; [@fig-orchard_prepost]a).

Mitochondrial function was supressed across all major functional categories in a similar fashion with no significant differences among functional categories ($Q_{M}_{`r MLMR_list_Measure[[1]]$QMdf[1]`, `r MLMR_list_Measure[[1]]$QMdf[2]`}$ = `r MLMR_list_Measure[[1]]$QM`, $p$ = `r MLMR_list_Measure[[1]]$QMp` [@fig-orchard_measure]a). Treatment with corticostrone supressed respiration and metabolic capacity the greatest (respiraton: $SMD_{H}$ = `r MLMR_list_Measure_noint[[1]]$b[4]`, 95% CI: `r MLMR_list_Measure_noint[[1]]$ci.lb[4]` to `r MLMR_list_Measure_noint[[1]]$ci.ub[4]`, $p$ = `r MLMR_list_Measure_noint[[1]]$pval[4]`; metabolic capacity: $SMD_{H}$ = `r MLMR_list_Measure_noint[[1]]$b[2]`, 95% CI: `r MLMR_list_Measure_noint[[1]]$ci.lb[2]` to `r MLMR_list_Measure_noint[[1]]$ci.ub[2]`, $p$ = `r MLMR_list_Measure_noint[[1]]$pval[2]`) and increasing oxidative damage ($SMD_{H}$ = `r MLMR_list_Measure_noint[[1]]$b[3]`, 95% CI: `r MLMR_list_Measure_noint[[1]]$ci.lb[3]` to `r MLMR_list_Measure_noint[[1]]$ci.ub[3]`, $p$ = `r MLMR_list_Measure_noint[[1]]$pval[3]`). 

While effects appeared to be stronger in mammals, there were no significant differences among classes ($Q_{M}_{`r MLMR_list_taxa[[1]]$QMdf[1]`,`r MLMR_list_taxa[[1]]$QMdf[2]`}$ = `r MLMR_list_taxa[[1]]$QM`, $p$ = `r MLMR_list_taxa[[1]]$QMp`; [@fig-orchard_taxa]a). Overall, mitochondrial function was supressed in mammals ($SMD_{H}$ = `r MLMR_list_taxa_noint[[1]]$b[3]`, 95% CI: `r MLMR_list_taxa_noint[[1]]$ci.lb[3]` to `r MLMR_list_taxa_noint[[1]]$ci.ub[3]`, $p$ = `r MLMR_list_taxa_noint[[1]]$pval[3]`) and fish ($SMD_{H}$ = `r MLMR_list_taxa_noint[[1]]$b[1]`, 95% CI: `r MLMR_list_taxa_noint[[1]]$ci.lb[1]` to `r MLMR_list_taxa_noint[[1]]$ci.ub[1]`, $p$ = `r MLMR_list_taxa_noint[[1]]$pval[1]`), with effects being weaker (albeit still negative) in birds ($SMD_{H}$ = `r MLMR_list_taxa_noint[[1]]$b[2]`, 95% CI: `r MLMR_list_taxa_noint[[1]]$ci.lb[2]` to `r MLMR_list_taxa_noint[[1]]$ci.ub[2]`, $p$ = `r MLMR_list_taxa_noint[[1]]$pval[2]`).


```{r, fig-orchard_measure}
#| label: fig-orchard_measure
#| echo: false
#| warning: false
#| error: false
#| fig-cap: "**Overall meta-analytic mean estimates across each functional trait category for each developmental stressor type (a) corticosterone, (b) social deprevation, (c) disturbance stress and (d) nutritional stress**. Mean estimates are shown as large points, with 95% confidence (thick black bars) and prediction (thin black bars). The number of effects (k) along with the number of studies (in parantheses) are shown provided for each trait category. The dashed line represents no effect (i.e., $SMD_{H}$ = 0). Raw data are also shown and are weighted by their inverse sampling error (precision)."

# Get summary data for levels
measure_table <- lapply(data_lists, function(x) x  %>% group_by(measurement_category) %>% summarise(studies = n_distinct(study), spp = n_distinct(species_phylo), k = n()))

# Create coordinate system that is unique for each plot
z = list(data.frame(x = c(1.2, 2.2, 3.2, 4.2), y = rep(5, 4)),
         data.frame(x = c(1.2, 2.2, 3.2), y = rep(5, 3)),
         data.frame(x = c(1.2, 2.2, 3.2), y = rep(5, 3)),
         data.frame(x = c(1.2, 2.2, 3.2, 4.2), y = rep(6,4)))
  
# Apply orchard to each model and add the k and spp information to the plot
  plots  <- mapply(function(x, y, z) orchard_plot(x, mod = "measurement_category", xlab = TeX("$SMD_{H}$"), group = "study", trunk.size = 1.2, branch.size = 2, k = FALSE, g = FALSE) +  ylim(-10,10) +                                              theme_classic() + theme(legend.position = "top", axis.title = element_text(size = 18), plot.title = element_text(face = "bold", size = 16),
                                                      axis.text = element_text(size = 12),
                                                       plot.tag = element_text(size = 24)) +
    annotate("text", x = c(z$x), y = c(z$y), label = TeX(paste0("\\textit{k} = ", y$k, " (", y$studies, ")")), size = 5, hjust = 0), x = MLMR_list_Measure, y = measure_table, z = z, SIMPLIFY = FALSE)                                                 


# Create a layout for the plots
    p_measure <- (plots[[1]] + ggtitle("Corticosterone") + plots[[2]] + ggtitle("Social Deprivation")) / (plots[[3]] + ggtitle("Disturbance") + plots[[4]] + ggtitle("Nutrition")) + plot_annotation(tag_levels = "a", tag_suffix = ")") 
    ggsave(here("output", "figures", "fig2.png"), p_measure, width = 15.5, height = 15.5)

    p_measure <- image_read(here("output", "figures", "fig2.png"))
    p_measure
```

## Social deprivation developmental impacts on mitochondrial function
Social deprivation during development had a negative impact on mitochondrial function ($SMD_{H}$ = `r coef(summary_list[[2]])$estimate`, 95% CI = `r coef(summary_list[[2]])$ci.lb` to `r coef(summary_list[[2]])$ci.ub`, $p$ = `r coef(summary_list[[2]])$pval`; [@fig-orchard_int]b). Effect heterogeneity was again high (95% Prediction Intervals: `r predict(summary_list[[2]])$pi.lb` to `r predict(summary_list[[2]])$pi.ub`; Table @tbl-heterogeneity; and see Table S @tbl-heterogeneity_cv & Table S @tbl-heterogeneity_m2), with `r i2[4,"I2_study"]`% of the variation being driven by differences among studies ($I^2_{study}$) (Table @tbl-heterogeneity). 

Social deprevation studies were only ever done with mammals, and all studies manipulated environments postnatally. Mitochondrial function was supressed across all major functional categories but they did not differ significantly from each other ($Q_{M}_{`r MLMR_list_Measure[[2]]$QMdf[1]`, `r MLMR_list_Measure[[2]]$QMdf[2]`}$ = `r MLMR_list_Measure[[2]]$QM`, $p$ = `r MLMR_list_Measure[[2]]$QMp`; [@fig-orchard_measure]b). Effects were more negative for antioxidant capacity ($SMD_{H}$ = `r MLMR_list_Measure_noint[[2]]$b[1]`, 95% CI: `r MLMR_list_Measure_noint[[2]]$ci.lb[1]` to `r MLMR_list_Measure_noint[[2]]$ci.ub[1]`, $p$ = `r MLMR_list_Measure_noint[[2]]$pval[1]`) and oxidative damage ($SMD_{H}$ = `r MLMR_list_Measure_noint[[2]]$b[3]`, 95% CI: `r MLMR_list_Measure_noint[[2]]$ci.lb[3]` to `r MLMR_list_Measure_noint[[2]]$ci.ub[3]`, $p$ = `r MLMR_list_Measure_noint[[2]]$pval[3]`). While metabolic capacity was also supressed overall, it was not significantly different from zero ($SMD_{H}$ = `r MLMR_list_Measure_noint[[2]]$b[2]`, 95% CI: `r MLMR_list_Measure_noint[[2]]$ci.lb[2]` to `r MLMR_list_Measure_noint[[2]]$ci.ub[2]`, $p$ = `r MLMR_list_Measure_noint[[2]]$pval[2]`; [@fig-orchard_measure]b).


```{r, fig-orchard_taxa}
#| label: fig-orchard_taxa
#| echo: false
#| warning: false
#| error: false
#| fig-cap: "**Overall meta-analytic mean estimates for each taxonomic group (class) across developmental stressors (a) corticosterone, (b) social deprevation, (c) disturbance stress and (d) nutritional stress**. Mean estimates are shown as large points, with 95% confidence (thick black bars) and prediction (thin black bars). The number of effects (k) along with the number of studies (in parantheses) are shown provided for each class. The dashed line represents no effect (i.e., $SMD_{H}$ = 0). Raw data are also shown and are weighted by their inverse sampling error (precision)"
  
    # get silouettes for taxa
     
        # Get a single image UUID for a species
        uuid_mammal <- get_uuid(name = "Mus_musculus")
        # Get the image for that UUID
        mammal <- get_phylopic(uuid = uuid_mammal)
        
        # Get a single image UUID for a species
        uuid_bird<- get_uuid(name = "Taeniopygia_guttata")
        # Get the image for that UUID
        bird <- get_phylopic(uuid = uuid_bird)
        #bird <- rotate_phylopic(img = bird, angle = 45)

         #Get a single image UUID for a species
        uuid_amphib <- get_uuid(name = "Triturus")
        # Get the image for that UUID
        amphib <- get_phylopic(uuid = uuid_amphib)

          #Get a single image UUID for a species
        uuid_fish <- get_uuid(name = "Dicentrarchus_labrax")
        # Get the image for that UUID
        fish <- get_phylopic(uuid = uuid_fish)

  # Get summary data for levels
taxa_table <- lapply(data_lists, function(x) x  %>% group_by(class) %>% summarise(studies = n_distinct(study), spp = n_distinct(species_phylo), k = n()))

# Create coordinate system that is unique for each plot
z = list(data.frame(x = c(1.2, 2.2, 3.2), y = rep(5, 3)),
         data.frame(x = c(1.2, 2.2, 3.2), y = rep(5, 3)),
         data.frame(x = c(1.2, 2.2, 3.2, 4.2), y = rep(5, 4)))

    plots  <- mapply(function(x, y, z)  {orchard_plot(x, mod = "class", xlab = TeX("$SMD_{H}$"), group = "study", trunk.size = 1.2, branch.size = 2, g = FALSE, k = FALSE) +  ylim(-10,10) +                                              theme_classic() + theme(legend.position = "top", axis.title = element_text(size = 18), plot.title = element_text(face = "bold", size = 16),
                                                      axis.text = element_text(size = 12),
                                                       plot.tag = element_text(size = 24))+
    annotate("text", x = c(z$x), y = c(z$y), label = TeX(paste0("\\textit{k} = ", y$k, " (", y$studies, ")")), size = 5, hjust = 0)}, x = MLMR_list_taxa[c(1,3,4)], y = taxa_table[c(1,3,4)], z = z, SIMPLIFY = FALSE)
                                                       
ann1 <- function() {list(add_phylopic(img = mammal, x = 3.2, y = -8, height = 0.45),
                         add_phylopic(img = bird, x = 2.2, y = -8, height = 0.45), add_phylopic(img = fish, x = 1.2, y = -8, height = 0.35))}
ann2 <- function() {list(add_phylopic(img = mammal, x = 4.2, y = -8, height = 0.45),
                         add_phylopic(img = bird, x = 3.2, y = -8, height = 0.45),
                         add_phylopic(img = amphib, x = 2.2, y = -8, height = 0.35), add_phylopic(img = fish, x = 1.2, y = -8, height = 0.35))}
    p_taxa <- (plots[[1]] + ann1() + ggtitle("Corticosterone") + plots[[2]] + ann1() + ggtitle("Disturbance") + plots[[3]] + ann2() + ggtitle("Nutrition")) + plot_annotation(tag_levels = "a", tag_suffix = ")") 
    ggsave(here("output", "figures", "fig3.png"), p_taxa, width = 15, height = 5)

    p_taxa <- image_read(here("output", "figures", "fig3.png"))
    p_taxa
```

## Disturbance developmental impacts on mitochondrial function

Disturbance during development had a negative impact on mitochondrial function ($SMD_{H}$ = `r coef(summary_list[[3]])$estimate`, 95% CI = `r coef(summary_list[[3]])$ci.lb` to `r coef(summary_list[[3]])$ci.ub`, $p$ = `r coef(summary_list[[3]])$pval`; [@fig-orchard_int]c). Effect heterogeneity was high (95% Prediction Intervals: `r predict(summary_list[[3]])$pi.lb` to `r predict(summary_list[[3]])$pi.ub`; Table @tbl-heterogeneity), with substantial variation across studies ($I^2_{study}$ = `r i2[2,"I2_study"]`%)(Table @tbl-heterogeneity).

Impacts of disturbance affected functional categories significantly differently ($Q_{M}_{`r MLMR_list_Measure[[3]]$QMdf[1]`, `r MLMR_list_Measure[[3]]$QMdf[2]`}$ = `r MLMR_list_Measure[[3]]$QM`, $p$ = `r MLMR_list_Measure[[3]]$QMp` [@fig-orchard_measure]c). Oxidative damage was most impacted by disturbance stress ($SMD_{H}$ = `r MLMR_list_Measure_noint[[3]]$b[3]`, 95% CI: `r MLMR_list_Measure_noint[[3]]$ci.lb[3]` to `r MLMR_list_Measure_noint[[3]]$ci.ub[3]`, $p$ = `r MLMR_list_Measure_noint[[3]]$pval[3]`), and differed significantly from antioxidant ($SMD_{H}$ = `r MLMR_list_Measure_noint[[3]]$b[1]`, 95% CI: `r MLMR_list_Measure_noint[[3]]$ci.lb[1]` to `r MLMR_list_Measure_noint[[3]]$ci.ub[1]`, $p$ = `r MLMR_list_Measure_noint[[3]]$pval[1]`) and metabolic capacity ($SMD_{H}$ = `r MLMR_list_Measure_noint[[3]]$b[2]`, 95% CI: `r MLMR_list_Measure_noint[[3]]$ci.lb[2]` to `r MLMR_list_Measure_noint[[3]]$ci.ub[2]`, $p$ = `r MLMR_list_Measure_noint[[3]]$pval[2]`) ([@fig-orchard_measure]c). 

Disturbance stress occured only postnatally in fish and birds, whereas in mammals disturbance stressors were also applied prenatally. As such, there was some taxonomic bias. However, we did not find any significant differences among classes ($Q_{M}_{`r MLMR_list_taxa[[3]]$QMdf[1]`, `r MLMR_list_taxa[[3]]$QMdf[2]`}$ = `r MLMR_list_taxa[[3]]$QM`, $p$ = `r MLMR_list_taxa[[3]]$QMp`; [@fig-orchard_taxa]b). Despite this, we found evidence that prenatal and post-natal disturbance stressors had different impacts on mitochondrial function. Prenatal disturbance stressors had a larger negative (albeit non-significant) impact on mitochondrial function compared to postnatal disturbance (Contrast $SMD_{H}$ = `r MLMR_list_preprost[[3]]$b[2]`, 95% CI = `r MLMR_list_preprost[[3]]$ci.lb[2]` to `r MLMR_list_preprost[[3]]$ci.ub[2]`, $p$ = `r MLMR_list_preprost[[3]]$pval[2]`; [@fig-orchard_prepost]b). Overall, prenatal disturbance stressors had a larger negative impact on mitochondrial function ($SMD_{H}$ = `r MLMR_list_preprost_noint[[3]]$b[2]`, 95% CI = `r MLMR_list_preprost_noint[[3]]$ci.lb[2]` to `r MLMR_list_preprost_noint[[3]]$ci.ub[2]`, $p$ = `r MLMR_list_preprost_noint[[3]]$pval[2]`), whereas postnatal disturbance stressors had a smaller negative impact ($SMD_{H}$ = `r MLMR_list_preprost_noint[[3]]$b[1]`, 95% CI = `r MLMR_list_preprost_noint[[3]]$ci.lb[1]` to `r MLMR_list_preprost_noint[[3]]$ci.ub[1]`, $p$ = `r MLMR_list_preprost_noint[[3]]$pval[1]`) ([@fig-orchard_prepost]b).


```{r, fig-orchard_prepost}
#| label: fig-orchard_prepost
#| echo: false
#| warning: false
#| error: false
#| fig-cap: "**Overall meta-analytic mean estimates different stages of manipulation (pre-natal, post-natal or both) across different developmental stressors (a) corticosterone, (b) social deprevation, (c) disturbance stress and (d) nutritional stress**. Mean estimates are shown as large points, with 95% confidence (thick black bars) and prediction (thin black bars). The number of effects (k) along with the number of studies (in parantheses) are shown provided for each stage. The dashed line represents no effect (i.e., $SMD_{H}$ = 0). Raw data are also shown and are weighted by their inverse sampling error (precision)"

 # Get summary data for levels
prepost_table <- lapply(data_lists, function(x) x  %>% group_by(stage) %>% summarise(studies = n_distinct(study), spp = n_distinct(species_phylo), k = n()))

# Create coordinate system that is unique for each plot
z = list(data.frame(x = c(1.2, 2.2), y = rep(5, 2)),
         data.frame(x = c(1.2, 2.2), y = rep(5, 2)),
         data.frame(x = c(1.2, 2.2, 3.2), y = rep(5, 3)))
  
    plots  <- mapply(function(x,y,z){ orchard_plot(x, mod = "stage", xlab = TeX("$SMD_{H}$"), group = "study", trunk.size = 1.2, branch.size = 2, k = FALSE, g = FALSE, weights = "prop") +  ylim(-10,10) +                                              theme_classic() + theme(legend.position = "top", axis.title = element_text(size = 18), plot.title = element_text(face = "bold", size = 16),
                                                      axis.text = element_text(size = 12),
                                                       plot.tag = element_text(size = 24)) +
    annotate("text", x = c(z$x), y = c(z$y), label = TeX(paste0("\\textit{k} = ", y$k, " (", y$studies, ")")), size = 5, hjust = 0)}, x = MLMR_list_preprost[c(1,3,4)], y = prepost_table[c(1,3,4)], z = z, SIMPLIFY = FALSE)
                                                                        
    p_prepost <- (plots[[1]] + ggtitle("Corticosterone") + plots[[2]] + ggtitle("Disturbance") + plots[[3]] + ggtitle("Nutrition")) + plot_annotation(tag_levels = "a", tag_suffix = ")") 
    ggsave(here("output", "figures", "fig5.png"), p_prepost, width = 15, height = 8)

    p_prepost <- image_read(here("output", "figures", "fig5.png"))
    p_prepost
```


## Nutrition developmental impacts on mitochondrial function
Nutritional stress during development had limited impact on mitochondrial function overall ($SMD_{H}$ = `r coef(summary_list[[4]])$estimate`, 95% CI = `r coef(summary_list[[4]])$ci.lb` to `r coef(summary_list[[4]])$ci.ub`, $p$ = `r coef(summary_list[[4]])$pval`; [@fig-orchard_int]d). Effect heterogeneity was high (95% Prediction Intervals: `r predict(summary_list[[4]])$pi.lb` to `r predict(summary_list[[4]])$pi.ub`; Table @tbl-heterogeneity; and see Table S @tbl-heterogeneity_cv & Table S @tbl-heterogeneity_m2), with variation being driven by differences between studies ($I^2_{study}$ = `r i2[3,"I2_study"]`%),  phylogeny ($I^2_{phylogeny}$ = `r i2[3,"I2_species_phylo"]`%) and tissue ($I^2_{tissue}$ = `r i2[3,"I2_tissue_sum"]`%) (Table @tbl-heterogeneity).

```{r, nurtition_models}
#| label: nurtition_models
#| echo: false
#| eval: false  
#| warning: false
#| error: false

#### -------------------------------------------------- ####
# 1.3   Nutrition moderator models 
#### -------------------------------------------------- ####

# We have a number of moderators that are specific to the nutrition category that needs to be explored carefully. Under/over nutrition, type of manipulation etc

# Extract the nutrition dataset only as moderators are only relevant for this dataset
  nutri_data <- data_lists[[4]]

# Have a look at categories and levels to identify gaps 
  tabyl(nutri_data, nutrition_type, nutrition_sum) # No fat manipulatioon in under nutrition
  tabyl(nutri_data, nutrition_type, measurement_category) # No repiratioon carbs 
  tabyl(nutri_data, nutrition_sum, measurement_category) # Looks good
  tabyl(nutri_data, nutrition_type, class) # Major tax bias. Carbs and fat mostly fish, protein mostly mammals
  tabyl(nutri_data, nutrition_sum, class) # No overnutrition of amphibians
  
rerun = FALSE
  if(rerun){
    #### -------------------------------------------------- ####
    # 1.3   Over and under nutrition and nutrition type 
    #### -------------------------------------------------- ####
      # Make sure obs is udpated for this dataset
        nutri_data$obs <- 1:nrow(nutri_data)

      # Prune the tree to relevant taxa contained within this dataset.
        tree_prune <- tree_checks(tree = phylo, dataCol = "species_phylo", data = nutri_data, type ="prune")

      # Calculate the phylogenetic correlation matrix
        phylo_cor <- vcv(tree_prune, cor = TRUE)

      # # Fit the MLMR model for each dataset but note that social deprivation only has one level for class so cannot fit this model

          nutri_up_down <- rma.mv(SMDH ~ nutrition_sum + nutrition_type, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1| species_phylo,
                                          ~1| tissue_sum,
                                          ~1| obs),
                            R = list(species_phylo = phylo_cor),
                          test = "t", 
                          data = nutri_data)
       # Save the model
        saveRDS(nutri_up_down, file = here("output", "models", "nutri_up_down.rds"))

    #### -------------------------------------------------- ####
    # 1.3   Over and under nutrition and measurement type  
    #### -------------------------------------------------- ####
  
          nutri_up_down_measure <- rma.mv(SMDH ~ nutrition_sum*measurement_category, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1| species_phylo,
                                          ~1| tissue_sum,
                                          ~1| obs),
                            R = list(species_phylo = phylo_cor),
                          test = "t", 
                          data = nutri_data)
       # Save the model
        saveRDS(nutri_up_down_measure, file = here("output", "models", "nutri_up_down_measure.rds"))


    #### -------------------------------------------------- ####
    # 1.3   Over and under nutrition and nutrition type - mammals only 
    #### -------------------------------------------------- ####
      # Mammals
        nutri_data_mammals <- nutri_data %>% filter(class == "Mammalia")
      # Make sure obs is udpated for this dataset
        nutri_data_mammals$obs <- 1:nrow(nutri_data_mammals)

      # Prune the tree to relevant taxa contained within this dataset.
        tree_prune <- tree_checks(tree = phylo, dataCol = "species_phylo", data = nutri_data_mammals, type ="prune")

      # Calculate the phylogenetic correlation matrix
        phylo_cor <- vcv(tree_prune, cor = TRUE)

        nutri_up_down_mammls <- rma.mv(SMDH ~ nutrition_sum + nutrition_type, V = v_SMDH, 
                            random = list(~1| study, 
                                          ~1| species_phylo,
                                          ~1| tissue_sum,
                                          ~1| obs),
                            R = list(species_phylo = phylo_cor),
                          test = "t", 
                          data = nutri_data_mammals)
        # Save the model
        saveRDS(nutri_up_down_mammls, file = here("output", "models", "nutri_up_down_mammls.rds"))
      } else {
        nutri_up_down <- readRDS(here("output", "models", "nutri_up_down.rds"))
        nutri_up_down_measure <- readRDS(here("output", "models", "nutri_up_down_measure.rds"))
        nutri_up_down_mammls <- readRDS(here("output", "models", "nutri_up_down_mammls.rds"))
      
  }

```

# References

<br>

::: {#refs}
:::

<br>


# Supplementary Materials

```{r, tbl-heterogeneity_cv}
#| label: tbl-heterogeneity_cv
#| tbl-cap: "Heterogeneity estimates using CV for developmental stressor datasets"
#| echo: false
#| warning: false
#| error: false
#| eval: true

#### -------------------------------------------------- ####
#        Heterogeneity  CV2 Table
#### -------------------------------------------------- ####

  # Create k and n columns for sample sizes
    order <- c(1, 3, 4, 2)
  size  <- data.frame(do.call("rbind", lapply(data_lists, function (x) x  %>% summarise(k = n(), species = n_distinct(species_phylo), study = n_distinct(study)))))  %>% slice(order)
  
  # Create table of cv2 Total and cv2 for each level
  cv2 <- make_het_tables(MLMA_list, size = size, type = "cv2")
 
cv2$Stressor <- c("Corticosterone",  "Disturbance", "Nutrition", "Social Deprevation")
cv2  <- cv2  %>% dplyr::select(Stressor, everything())

eq1  <- c(
  "Stressor",
  "n_{effects}",
  "n_{species}",
  "n_{study}",
  "CV^2_{total}",
  "CV^2_{study}",
  "CV^2_{phylogeny}",
  "CV^2_{tissue}",
  "CV^2_{obs}"
)

flextable(round_df(cv2, digits = 3))  %>% compose(part = "header", value = as_paragraph(as_equation(eq1))) %>% 
  width(j = c(1:9), width = c(1.5, rep(0.65, 8)))  %>%  compose(j = c(7,8), i = 4, value = as_paragraph("–"))
```

```{r,tbl-heterogeneity_m2}
#| label: tbl-heterogeneity_m2
#| tbl-cap: "Heterogeneity M2 "
#| echo: false
#| warning: false
#| error: false
#| eval: true

# Create k and n columns for sample sizes
    order <- c(1, 3, 4, 2)
  size  <- data.frame(do.call("rbind", lapply(data_lists, function (x) x  %>% summarise(k = n(), species = n_distinct(species_phylo), study = n_distinct(study)))))  %>% slice(order)
 m2 <- make_het_tables(MLMA_list, size = size, type = "m2")
m2$Stressor <- c("Corticosterone",  "Disturbance", "Nutrition", "Social Deprevation")
m2  <- m2  %>% dplyr::select(Stressor, everything())

eq2  <- c(
  "Stressor",
  "n_{effects}",
  "n_{species}",
  "n_{study}",
  "M^2_{total}",
  "M^2_{study}",
  "M^2_{phylogeny}",
  "M^2_{tissue}",
  "M^2_{obs}"
)

flextable(round_df(m2, digits = 3))  %>% compose(part = "header", value = as_paragraph(as_equation(eq2))) %>% 
  width(j = c(1:9), width = c(1.5, rep(0.65, 8)))  %>%  compose(j = c(7,8), i = 4, value = as_paragraph("–"))
```
